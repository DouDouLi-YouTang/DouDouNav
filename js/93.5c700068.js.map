{"version":3,"file":"js/93.5c700068.js","mappings":"0NAkBA,MAAMA,GAAkBC,EAAAA,EAAAA,KAAI,GACtBC,GAASD,EAAAA,EAAAA,IAAI,MACbE,GAAOC,EAAAA,EAAAA,IAAS,CACpB,CAAEC,KAAM,KAAMC,GAAI,KAClB,CAAED,KAAM,KAAMC,GAAI,KAClB,CAAED,KAAM,KAAMC,GAAI,OAEdC,EAAMA,KACVP,EAAgBQ,OAAQ,CAAI,EAIxBC,EAAUA,KACd,IAAIC,EAAQC,SAASC,cAAc,iCACnCC,EAAAA,GAASC,OAAOJ,EAAO,CAErBK,MAAO,CACLV,KAAM,QACNW,MAAM,EACNC,KAAK,GAEPC,OAAQ,UACRC,UAAW,IACXC,MAAMC,GAEJC,QAAQC,IAAI,aAAc,CAACF,EAAIG,KAAMH,EAAII,MAC3C,EACAC,SAASL,GAEPC,QAAQC,IAAI,gBAAiB,CAACF,EAAIG,KAAMH,EAAII,MAC9C,EACAE,SAASN,GAEPC,QAAQC,IAAI,gBAAiB,CAACF,EAAIG,KAAMH,EAAII,MAC9C,EACAG,QAAS,SAAUP,GAEjBC,QAAQC,IAAIF,EAAIG,MAChBF,QAAQC,IAAIF,EAAII,KAElB,EACAI,OAAOR,GAELC,QAAQC,IAAI,gBAAiB,CAACF,EAAIG,KAAMH,EAAII,MAC9C,EACAK,MAAMT,GAEJC,QAAQC,IAAI,SAAUF,EAoCxB,GACA,E,2xBCnGJ,MAAMU,EAAc,EAEpB,O","sources":["webpack://doudou-nav/./src/views/test.vue","webpack://doudou-nav/./src/views/test.vue?6a78"],"sourcesContent":["<template>\r\n  <el-button @click=\"btn\">点击显示</el-button>\r\n  <el-dialog ref=\"dialog\" v-model=\"tableSortdialog\" title=\"排序\" @opened=\"rowDrop\">\r\n    <el-table id=\"table\" :data=\"list\" row-key=\"id\" style=\"width: 500px\">\r\n      <el-table-column label=\"排序\" width=\"60\" align=\"center\">\r\n        <template #default=\"scope\">\r\n          <el-icon class=\"handle\" style=\"cursor:move;\">\r\n            <Expand />\r\n          </el-icon>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"name\" label=\"昵称\" width=\"180\" />\r\n    </el-table>\r\n  </el-dialog>\r\n</template>\r\n<script setup>\r\nimport Sortable from 'sortablejs'\r\nimport { ref, onMounted, computed, reactive, nextTick, watchEffect, toRef, toRefs, onUpdated } from 'vue';\r\nconst tableSortdialog = ref(false)\r\nconst dialog = ref(null)\r\nconst list = reactive([\r\n  { name: '12', id: '1' },\r\n  { name: '13', id: '2' },\r\n  { name: '14', id: '3' },\r\n])\r\nconst btn = () => {\r\n  tableSortdialog.value = true\r\n}\r\n\r\n// 表格行拖拽\r\nconst rowDrop = () => {\r\n  let tbody = document.querySelector(\".el-table__body-wrapper tbody\");\r\n  Sortable.create(tbody, {\r\n    // or { name: \"...\", pull: [true, false, 'clone', array], put: [true, false, array] }\r\n    group: {\r\n      name: \"words\",\r\n      pull: true,\r\n      put: true,\r\n    },\r\n    handle: '.handle',\r\n    animation: 150, // ms, number 单位：ms，定义排序动画的时间\r\n    onAdd(evt) {\r\n      // 拖拽时候添加有新的节点的时候发生该事件\r\n      console.log(\"onAdd.foo:\", [evt.item, evt.from]);\r\n    },\r\n    onUpdate(evt) {\r\n      // 拖拽更新节点位置发生该事件\r\n      console.log(\"onUpdate.foo:\", [evt.item, evt.from]);\r\n    },\r\n    onRemove(evt) {\r\n      // 删除拖拽节点的时候促发该事件\r\n      console.log(\"onRemove.foo:\", [evt.item, evt.from]);\r\n    },\r\n    onStart: function (evt) {\r\n      // 开始拖拽出发该函数\r\n      console.log(evt.item);\r\n      console.log(evt.from);\r\n      // console.log(\"onStart.foo:\", [evt.item, evt.from]);\r\n    },\r\n    onSort(evt) {\r\n      // 发生排序发生该事件\r\n      console.log(\"onUpdate.foo:\", [evt.item, evt.from]);\r\n    },\r\n    onEnd(evt) {\r\n      // 结束拖拽\r\n      console.log(\"结束表格拖拽\", evt);\r\n      // 如果拖拽结束后顺序发生了变化，则对数据进行修改\r\n      // if (evt.oldIndex !== evt.newIndex) {\r\n      //   let currRow = fieldOptions.value.splice(evt.oldIndex, 1)[0];\r\n      //   fieldOptions.value.splice(evt.newIndex, 0, currRow);\r\n      //   // 将排序后的ID抽离成数组传给后端\r\n      //   let optIDs = [];\r\n      //   fieldOptions.value.forEach((item) => {\r\n      //     optIDs.push(item.ID);\r\n      //   });\r\n      //   const params = {\r\n      //     Params: {\r\n      //       SpaceID: spaceID.value,\r\n      //       LaunchID: launchID.value,\r\n      //       OptIDs: optIDs,\r\n      //     },\r\n      //     Options: {\r\n      //       APIServer: apiServer,\r\n      //     },\r\n      //   };\r\n      //   // 发送改变顺序的请求\r\n      //   // store.commit(\"doRequest\");\r\n      //   spaceService.OrderOptions(params).then((res) => {\r\n      //     store.commit(\"deResponse\");\r\n      //     if (res.Status === 0) {\r\n      //       console.log(\"表格顺序修改成功\");\r\n      //     } else {\r\n      //       ElMessage({\r\n      //         showClose: true,\r\n      //         message: res.ErrorMessage,\r\n      //         type: \"error\",\r\n      //         duration: 10000,\r\n      //       });\r\n      //     }\r\n      //   });\r\n      // }\r\n    },\r\n  });\r\n};\r\n\r\n\r\n</script>\r\n<style lang=\"less\" scoped></style>","import script from \"./test.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./test.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["tableSortdialog","ref","dialog","list","reactive","name","id","btn","value","rowDrop","tbody","document","querySelector","Sortable","create","group","pull","put","handle","animation","onAdd","evt","console","log","item","from","onUpdate","onRemove","onStart","onSort","onEnd","__exports__"],"sourceRoot":""}